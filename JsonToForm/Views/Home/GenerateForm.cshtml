@using JsonToFofm.Models;
@model JsonToForm.Models.FormsViewModel

@{ ViewData["Title"] = "Форма"; }

<div class="jumbotron">

    <h2>@Model.Form.Name</h2>

    <p hidden>@Model.Form.PostMessage</p>

    <form>
        @foreach (var form in Model.Form.Inputs)
        {
            if (form is Filler)
            {
                Filler filler = (Filler)form;

                <h4>@filler.Text</h4>
            }
            else if (form is Text)
            {
                Text text = (Text)form;

                <p><label>@text.Label</label></p>
                <p>
                    <input type="@text.ValidationRules" name="@text.Name" class="@text.Class"
                           value="@text.Value" placeholder="@text.Placeholder" required="@text.Required" disabled="@text.Disabled" />
                </p>
            }
            else if (form is TextArea)
            {
                TextArea textArea = (TextArea)form;

                <p><label>@textArea.Label</label></p>
                <p>
                    <textarea type="@textArea.ValidationRules" name="@textArea.Name" class="@textArea.Class"
                              value="@textArea.Value" placeholder="@textArea.Placeholder" required="@textArea.Required" disabled="@textArea.Disabled">
                    </textarea>
                </p>
            }
            else if (form is CheckBox)
            {
                CheckBox checkBox = (CheckBox)form;

                <p><label>@checkBox.Label</label></p>
                <p>
                    <input type="@checkBox.ValidationRules" name="@checkBox.Name" class="@checkBox.Class"
                           required="@checkBox.Required" checked="@checkBox.Checked" disabled="@checkBox.Disabled" />@checkBox.Text
                </p>
            }
            else if (form is Select)
            {
                Select select = (Select)form;

                <p><label>@select.Label</label></p>
                <p>
                    @foreach (var option in select.Options)
                     {
                        <option selected="@option.Selected" value="@option.Value">@option.Text</option>
                     }
                </p>
            }
            else if (form is Radio)
            {
                Radio radio = (Radio)form;

                <p> <label>@radio.Label</label></p>
                foreach (var item in radio.Items)
                {
                    <p>
                         <input type="@radio.ValidationRules" name="@radio.Name" class="@radio.Class"
                         required="@radio.Required" checked="@item.Checked" value="@item.Value" disabled="disabled" /> @item.Text
                    </p>
                }
            }
            else if (form is Button)
            {
                Button button = (Button)form; 

                <p><button class="@button.Class">@button.Text</button> </p>
            }
         }
    </form>
</div>


